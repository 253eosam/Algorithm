import{_ as i,c as a,o as t,ae as h}from"./chunks/framework.Dh1jimFm.js";const c=JSON.parse('{"title":"🐸 FrogJump 문제 해결","description":"","frontmatter":{},"headers":[],"relativePath":"problems/codility/FrogJump.md","filePath":"problems/codility/FrogJump.md"}'),l={name:"problems/codility/FrogJump.md"};function n(e,s,k,p,d,r){return t(),a("div",null,s[0]||(s[0]=[h(`<h1 id="🐸-frogjump-문제-해결" tabindex="-1">🐸 FrogJump 문제 해결 <a class="header-anchor" href="#🐸-frogjump-문제-해결" aria-label="Permalink to &quot;🐸 FrogJump 문제 해결&quot;">​</a></h1><h2 id="문제-설명" tabindex="-1">문제 설명 <a class="header-anchor" href="#문제-설명" aria-label="Permalink to &quot;문제 설명&quot;">​</a></h2><p>개구리가 위치 <code>X</code>에서 시작하여 목표 지점 <code>Y</code>로 이동해야 합니다.<br> 개구리는 한 번 점프할 때 <strong>고정된 거리 <code>D</code>만큼</strong> 이동할 수 있습니다.<br><strong>개구리가 <code>Y</code> 이상으로 도달하는 데 필요한 최소 점프 횟수를 반환</strong>하는 문제입니다.</p><hr><h2 id="문제-조건" tabindex="-1">문제 조건 <a class="header-anchor" href="#문제-조건" aria-label="Permalink to &quot;문제 조건&quot;">​</a></h2><ul><li>개구리는 한 번에 <strong>정확히 <code>D</code>만큼</strong> 점프할 수 있습니다.</li><li>개구리는 <strong><code>X &gt;= Y</code>인 경우 점프할 필요가 없습니다</strong>. (결과는 <code>0</code>)</li><li>필요한 최소 점프 횟수를 계산해야 합니다.</li></ul><hr><h2 id="예제" tabindex="-1">예제 <a class="header-anchor" href="#예제" aria-label="Permalink to &quot;예제&quot;">​</a></h2><table tabindex="0"><thead><tr><th><code>X</code></th><th><code>Y</code></th><th><code>D</code></th><th>필요한 점프 횟수</th></tr></thead><tbody><tr><td><code>10</code></td><td><code>85</code></td><td><code>30</code></td><td><code>3</code></td></tr><tr><td><code>0</code></td><td><code>75</code></td><td><code>20</code></td><td><code>4</code></td></tr><tr><td><code>10</code></td><td><code>10</code></td><td><code>5</code></td><td><code>0</code></td></tr></tbody></table><h4 id="예제-설명-첫-번째-케이스" tabindex="-1">예제 설명 (첫 번째 케이스) <a class="header-anchor" href="#예제-설명-첫-번째-케이스" aria-label="Permalink to &quot;예제 설명 (첫 번째 케이스)&quot;">​</a></h4><ul><li>현재 위치: <code>X = 10</code></li><li>목표 위치: <code>Y = 85</code></li><li>한 번 점프 시 <code>D = 30</code></li><li>점프 과정: <code>10 → 40 → 70 → 100</code></li><li>최소 <strong><code>3</code>번</strong> 점프 필요</li></ul><hr><h2 id="해결-방법" tabindex="-1">해결 방법 <a class="header-anchor" href="#해결-방법" aria-label="Permalink to &quot;해결 방법&quot;">​</a></h2><ol><li><p><strong>총 이동해야 할 거리 계산:</strong> <code>distance = Y - X</code></p></li><li><p><strong>필요한 점프 횟수 계산:</strong></p><ul><li><code>distance</code>가 <code>D</code>로 나누어 떨어지면 <code>distance / D</code></li><li>나누어 떨어지지 않으면 <code>Math.floor(distance / D) + 1</code> (추가 점프 필요)</li></ul><p>즉, <strong>올림(ceil) 연산을 적용하여 점프 횟수를 계산</strong>합니다.</p></li></ol><hr><h2 id="코드-구현" tabindex="-1">코드 구현 <a class="header-anchor" href="#코드-구현" aria-label="Permalink to &quot;코드 구현&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> solution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> distance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> X</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 총 이동해야 할 거리</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> distance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> distance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(distance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h2 id="코드-설명" tabindex="-1">코드 설명 <a class="header-anchor" href="#코드-설명" aria-label="Permalink to &quot;코드 설명&quot;">​</a></h2><ol><li><p><strong>이동해야 할 거리 계산</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> distance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> X</span></span></code></pre></div><ul><li>현재 위치에서 목표 위치까지의 거리를 계산</li></ul></li><li><p><strong>필요한 점프 횟수 계산</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> distance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> distance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(distance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><ul><li><code>distance % D === 0</code> → <code>D</code>로 정확히 나누어 떨어지는 경우<br> → <code>distance / D</code> 그대로 반환</li><li>그렇지 않으면 <code>Math.floor(distance / D) + 1</code> → 추가 점프 필요</li></ul></li></ol><hr><h2 id="시간-복잡도" tabindex="-1">시간 복잡도 <a class="header-anchor" href="#시간-복잡도" aria-label="Permalink to &quot;시간 복잡도&quot;">​</a></h2><ul><li><strong>모든 연산이 <code>O(1)</code></strong> (상수 시간)<br> → 입력 크기에 상관없이 <strong>항상 일정한 시간에 해결 가능</strong></li></ul><hr><h2 id="실행-예제" tabindex="-1">실행 예제 <a class="header-anchor" href="#실행-예제" aria-label="Permalink to &quot;실행 예제&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">solution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">85</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 출력: 3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">solution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 출력: 4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">solution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 출력: 0</span></span></code></pre></div><hr><h2 id="최종-정리" tabindex="-1">최종 정리 <a class="header-anchor" href="#최종-정리" aria-label="Permalink to &quot;최종 정리&quot;">​</a></h2><p>✅ <strong><code>O(1)</code>의 빠른 연산</strong><br> ✅ <strong>거리 계산 후 필요한 점프 횟수 계산</strong><br> ✅ <strong>올림(ceil) 연산을 활용한 깔끔한 해결 방법</strong></p><p>이제 개구리를 빠르게 점프시켜 목표 지점에 도달시킬 수 있습니다! 🐸🚀</p>`,30)]))}const g=i(l,[["render",n]]);export{c as __pageData,g as default};
